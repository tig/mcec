//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MCEControl.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MCEControl.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MCE Controller.
        /// </summary>
        internal static string App_FullName {
            get {
                return ResourceManager.GetString("App_FullName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///MCE Controller Commands File - Copyright Kindel Sytems, LLC.
        ///
        ///This file must be named MCEControl.commands and must be placed  in the same directory as the MCEControl.exe file.
        ///
        ///Modify this file to extend/change the commands MCE Controller supports. This file can be modified while MCE Controller is running; it will re-load the file when changes are detected.
        ///
        ///See the documentation at https://tig.github.io/mcec for details on the commands supported by MCE Controller.
        ///
        ///.
        /// </summary>
        internal static string CommandsFileXmlComments {
            get {
                return ResourceManager.GetString("CommandsFileXmlComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;MCE Controller requires .NET Framework 4.7 or newer.\r\n\r\nDownload and install from http://www.microsoft.com/net/&quot;.
        /// </summary>
        internal static string Error_RequiresDotNetVersion {
            get {
                return ResourceManager.GetString("Error_RequiresDotNetVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        internal static string MCE_Controller_Version_label {
            get {
                return ResourceManager.GetString("MCE_Controller_Version_label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No commands loaded. Something is wrong with the MCEController.commands file. See the log for details, fix, and restart..
        /// </summary>
        internal static string MCEController_commands_read_error {
            get {
                return ResourceManager.GetString("MCEController_commands_read_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart MCE Controller for change to take effect..
        /// </summary>
        internal static string SettingsDialog_CheckDisableInternalCommands_Restart_MCE_Controller_for_change_to_take_effect_ {
            get {
                return ResourceManager.GetString("SettingsDialog_CheckDisableInternalCommands_Restart_MCE_Controller_for_change_to_" +
                        "take_effect_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string SettingsDialog_CheckDisableInternalCommands_Settings {
            get {
                return ResourceManager.GetString("SettingsDialog_CheckDisableInternalCommands_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Trafficlight_gray_icon {
            get {
                object obj = ResourceManager.GetObject("Trafficlight-gray-icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Trafficlight_green_icon {
            get {
                object obj = ResourceManager.GetObject("Trafficlight-green-icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Trafficlight_red_icon {
            get {
                object obj = ResourceManager.GetObject("Trafficlight-red-icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No connection could be made because the target computer actively refused it. This usually results from trying to connect to a service that is inactive on the foreign host—that is, one with no server application running..
        /// </summary>
        internal static string WSA_10061 {
            get {
                return ResourceManager.GetString("WSA_10061", resourceCulture);
            }
        }
    }
}
