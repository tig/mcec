<#@ template language="C#" hostSpecific="True"#>
<#@ output extension="cs" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#
	string dir = Host.ResolveAssemblyReference("$(SolutionDir)");
	// Host.ResolveAssemblyReference has a bug where when run from msbuild 
	// it does not honor expansions for $(SolutionDir). Lame workaround.
	int n = dir.IndexOf("$(SolutionDir)");
	if (n > -1)
		dir = dir.Remove(n, dir.Length - n) + "..\\..\\";
	string file = Path.Combine(dir, "..\\Installer\\version.txt");
    Console.WriteLine("Generating " + file + " ...");

	string contents = File.ReadAllText(file); 
 
	string[] parts = contents.Split('.');
	int build;
	if (int.TryParse(parts[3], out build))
	{
		// increment the build number
		parts[3] = (build + 1).ToString();
	}
	string version = string.Join(".", parts);
	// write the new version number back to the file
	File.WriteAllText(file, version);
	Console.WriteLine("Wrote " + version + " to " + file);
#>
// This file was generated by a tool. Any changes made manually will be lost
// the next time this project is built (via AssemblyFileVersion.tt).
using System.Reflection;
[assembly: AssemblyVersion("<#= version #>")]
[assembly: AssemblyFileVersion("<#= version #>")]
[assembly: AssemblyCopyright("Copyright © 2022 Kindel Systems, LLC.")] 